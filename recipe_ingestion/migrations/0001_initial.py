# Generated by Django 5.2.5 on 2025-08-11 19:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('plenary_pantry', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IngestionJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('recipes_found', models.PositiveIntegerField(default=0)),
                ('recipes_processed', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('pattern', models.TextField(help_text='Regex pattern or extraction rules')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtractedRecipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raw_name', models.CharField(max_length=200)),
                ('raw_instructions', models.TextField()),
                ('raw_ingredients', models.JSONField(default=list, help_text='List of raw ingredient strings')),
                ('raw_metadata', models.JSONField(default=dict, help_text='Additional extracted metadata')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence in extraction quality (0-1)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_recipes', to='recipe_ingestion.ingestionjob')),
            ],
        ),
        migrations.CreateModel(
            name='IngestionSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(choices=[('image', 'Image Upload'), ('url', 'Web URL'), ('text', 'Manual Text Input'), ('api', 'API Import')], max_length=20)),
                ('source_name', models.CharField(help_text='Name or title of the source', max_length=200)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('source_file', models.FileField(blank=True, null=True, upload_to='recipe_sources/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'pdf'])])),
                ('raw_text', models.TextField(blank=True, help_text='Raw text extracted from source')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingestion_sources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ingestionjob',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='recipe_ingestion.ingestionsource'),
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='recipe_ingestion.ingestionjob')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_text', models.CharField(max_length=500)),
                ('quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('preparation_method', models.CharField(blank=True, max_length=200)),
                ('confidence', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('normalized_ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='plenary_pantry.ingredient')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='plenary_pantry.unit')),
            ],
            options={
                'unique_together': {('raw_text', 'normalized_ingredient')},
            },
        ),
    ]
