# Generated by Django 5.2.5 on 2025-09-02 16:27

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovedEmailSender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(help_text='Email address that can send recipes', max_length=254, unique=True)),
                ('sender_name', models.CharField(blank=True, help_text='Optional name for the sender', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this sender is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Approved Email Sender',
                'verbose_name_plural': 'Approved Email Senders',
                'ordering': ['email_address'],
            },
        ),
        migrations.CreateModel(
            name='EmailIngestionSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sender_email', models.EmailField(help_text='Email address of the sender', max_length=254)),
                ('sender_name', models.CharField(blank=True, help_text='Name of the sender', max_length=200)),
                ('subject', models.CharField(help_text='Email subject line', max_length=500)),
                ('received_at', models.DateTimeField(help_text='When the email was received')),
                ('message_id', models.CharField(help_text='Email message ID for deduplication', max_length=500, unique=True)),
                ('raw_email_content', models.TextField(blank=True, help_text='Raw email content for debugging')),
                ('attachment_count', models.PositiveIntegerField(default=0, help_text='Number of attachments processed')),
                ('is_approved_sender', models.BooleanField(default=False, help_text='Whether sender was on approved list')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Email Ingestion Source',
                'verbose_name_plural': 'Email Ingestion Sources',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='IngestionJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partially Completed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('recipes_found', models.PositiveIntegerField(default=0)),
                ('recipes_processed', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('pattern', models.TextField(help_text='Regex pattern or extraction rules')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(help_text='Original filename of the attachment', max_length=500)),
                ('content_type', models.CharField(help_text='MIME type of the attachment', max_length=100)),
                ('file_size', models.PositiveIntegerField(help_text='Size of the attachment in bytes')),
                ('attachment_file', models.FileField(help_text='Saved attachment file', upload_to='recipe_sources/email/')),
                ('is_processed', models.BooleanField(default=False, help_text='Whether this attachment has been processed')),
                ('processing_error', models.TextField(blank=True, help_text='Error message if processing failed')),
                ('attachment_type', models.CharField(choices=[('attachment', 'Attachment'), ('embedded', 'Embedded Image')], default='attachment', help_text='Type of attachment - traditional attachment or embedded image', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('email_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='recipe_ingestion.emailingestionsource')),
            ],
            options={
                'verbose_name': 'Email Attachment',
                'verbose_name_plural': 'Email Attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExtractedRecipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('raw_name', models.CharField(max_length=200)),
                ('raw_instructions', models.TextField()),
                ('raw_ingredients', models.JSONField(default=list, help_text='List of raw ingredient strings')),
                ('raw_metadata', models.JSONField(default=dict, help_text='Additional extracted metadata')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence in extraction quality (0-1)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_recipes', to='recipe_ingestion.ingestionjob')),
            ],
        ),
        migrations.CreateModel(
            name='IngestionSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(choices=[('image', 'Image Upload'), ('multi_image', 'Multi-Image Upload'), ('url', 'Web URL'), ('text', 'Manual Text Input'), ('api', 'API Import'), ('email', 'Email Attachment')], max_length=20)),
                ('source_name', models.CharField(help_text='Name or title of the source', max_length=200)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('source_file', models.FileField(blank=True, null=True, upload_to='recipe_sources/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'pdf'])])),
                ('raw_text', models.TextField(blank=True, help_text='Raw text extracted from source')),
                ('is_test', models.BooleanField(default=False, help_text='Mark as test data for easy filtering')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingestion_sources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='ingestionjob',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='recipe_ingestion.ingestionsource'),
        ),
        migrations.AddField(
            model_name='emailingestionsource',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_details', to='recipe_ingestion.ingestionsource'),
        ),
        migrations.CreateModel(
            name='MultiImageSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image_file', models.FileField(upload_to='recipe_sources/multi/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'heic', 'heif'])])),
                ('page_number', models.PositiveIntegerField(default=1, help_text='Page number in the recipe')),
                ('page_type', models.CharField(choices=[('ingredients', 'Ingredients Page'), ('instructions', 'Instructions Page'), ('metadata', 'Metadata Page'), ('unknown', 'Unknown')], default='unknown', help_text='Type of content on this page', max_length=20)),
                ('extracted_text', models.TextField(blank=True, help_text='Text extracted from this image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multi_images', to='recipe_ingestion.ingestionsource')),
            ],
            options={
                'ordering': ['page_number'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='recipe_ingestion.ingestionjob')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_text', models.CharField(max_length=500)),
                ('quantity', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('preparation_method', models.CharField(blank=True, max_length=200)),
                ('confidence', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('normalized_ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ingredient')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.unit')),
            ],
            options={
                'unique_together': {('raw_text', 'normalized_ingredient')},
            },
        ),
    ]
